// This file has been autogenerated from a class added in the UI designer.

using System;

using MonoTouch.Foundation;
using MonoTouch.UIKit;
using System.Text.RegularExpressions;

namespace ToDo
{
	public partial class AuthenticationViewController : UIViewController
	{
		private string _url;
		public string Url 
		{ 
			get
			{
				return _url;
			}
			set 
			{
				_url = value;
				if(this.webView != null)
					LoadPage();
			}
		}

		public string AuthenticatedUrl {
			get;
			set;
		}
		public delegate void AuthenticatedDelegate(string contents);

		public event AuthenticatedDelegate Authenticated;

		public AuthenticationViewController (IntPtr handle) : base (handle)
		{

		}

		private void LoadPage()
		{
			NSUrlRequest req = new NSUrlRequest (new NSUrl (Url));
			webView.LoadFinished += (object sender, EventArgs e) => {
				if(webView.Request.Url.AbsoluteString.Contains(AuthenticatedUrl)){
					var responseBody = webView.EvaluateJavascript("document.body.innerHTML");
					var text = new NSString(responseBody, NSStringEncoding.ASCIIStringEncoding);
					var regex = new Regex("<pre>.+</pre>", RegexOptions.Singleline);
					var match = regex.Match(text);
					if(match.Success){
						var result = match.Captures[0].Value;
						result = result.Replace("<pre>", "").Replace("</pre>", "").Replace("\n", "").Replace(" ", "");
						Authenticated.Invoke(result);
						this.DismissViewController(true, null);
					}

				}
			};
			webView.LoadRequest (req);
		}

		public override void ViewDidAppear (bool animated)
		{
			base.ViewDidAppear (animated);
	
			if(!string.IsNullOrEmpty(Url))
				LoadPage ();
		}

		public override void ViewDidLoad ()
		{
			base.ViewDidLoad ();


		}
	}
}
